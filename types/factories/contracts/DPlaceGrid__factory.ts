/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DPlaceGrid,
  DPlaceGridInterface,
} from "../../contracts/DPlaceGrid";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "PixelChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "basePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "calculatePixelPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "x",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "y",
        type: "uint256[]",
      },
    ],
    name: "calculatePixelsPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "claimPixel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "x",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "y",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "claimPixels",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "getPixel",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "contested",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "lastUpdateTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "purchasePrice",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct DPlaceGrid.Pixel",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "grid",
    outputs: [
      {
        internalType: "uint16",
        name: "contested",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "lastUpdateTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "purchasePrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gridSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_basePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_priceDecayInterval",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_priceVelocity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_gridSize",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceDecayInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceVelocity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_basePrice",
        type: "uint256",
      },
    ],
    name: "setBasePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gridSize",
        type: "uint256",
      },
    ],
    name: "setGridSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_priceVelocity",
        type: "uint256",
      },
    ],
    name: "setPriceVelocity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_priceDecayInterval",
        type: "uint256",
      },
    ],
    name: "setpPriceDecayInterval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506121e9806100206000396000f3fe60806040526004361061011f5760003560e01c806379f9607d116100a0578063de315d9011610064578063de315d90146103ba578063de4b3262146103e5578063e9e3acc01461040e578063f2fde38b14610439578063fc7e286d146104625761011f565b806379f9607d146102cc5780638a1dd162146102f75780638da5cb5b146103345780639d1c531c1461035f578063c7876ea41461038f5761011f565b8063266b08c2116100e7578063266b08c21461020f5780633ccfd60b146102385780634fdc91bf1461024f57806360a2da441461028c578063715018a6146102b55761011f565b8063033848b314610124578063044993b71461014d578063146008e31461018a57806317b63299146101ca578063261770a8146101e6575b600080fd5b34801561013057600080fd5b5061014b600480360381019061014691906111f8565b61049f565b005b34801561015957600080fd5b50610174600480360381019061016f919061137e565b6104b1565b6040516101819190611405565b60405180910390f35b34801561019657600080fd5b506101b160048036038101906101ac9190611420565b61052d565b6040516101c194939291906114be565b60405180910390f35b6101e460048036038101906101df9190611699565b610598565b005b3480156101f257600080fd5b5061020d600480360381019061020891906111f8565b61066c565b005b34801561021b57600080fd5b50610236600480360381019061023191906111f8565b61067e565b005b34801561024457600080fd5b5061024d610690565b005b34801561025b57600080fd5b5061027660048036038101906102719190611420565b6107bb565b6040516102839190611405565b60405180910390f35b34801561029857600080fd5b506102b360048036038101906102ae9190611740565b61090b565b005b3480156102c157600080fd5b506102ca610a69565b005b3480156102d857600080fd5b506102e1610a7d565b6040516102ee9190611405565b60405180910390f35b34801561030357600080fd5b5061031e60048036038101906103199190611420565b610a83565b60405161032b9190611829565b60405180910390f35b34801561034057600080fd5b50610349610b4c565b6040516103569190611844565b60405180910390f35b6103796004803603810190610374919061185f565b610b76565b6040516103869190611405565b60405180910390f35b34801561039b57600080fd5b506103a4610d5e565b6040516103b19190611405565b60405180910390f35b3480156103c657600080fd5b506103cf610d64565b6040516103dc9190611405565b60405180910390f35b3480156103f157600080fd5b5061040c600480360381019061040791906111f8565b610d6a565b005b34801561041a57600080fd5b50610423610d7c565b6040516104309190611405565b60405180910390f35b34801561044557600080fd5b50610460600480360381019061045b91906118fa565b610d82565b005b34801561046e57600080fd5b50610489600480360381019061048491906118fa565b610e05565b6040516104969190611405565b60405180910390f35b6104a7610e1d565b8060658190555050565b6000806000905060005b8451811015610522576105028582815181106104da576104d9611927565b5b60200260200101518583815181106104f5576104f4611927565b5b60200260200101516107bb565b8261050d9190611985565b9150808061051a906119db565b9150506104bb565b508091505092915050565b6069602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900461ffff16908060010154908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b600080600090505b8451811015610622576106028582815181106105bf576105be611927565b5b60200260200101518583815181106105da576105d9611927565b5b60200260200101518584815181106105f5576105f4611927565b5b6020026020010151610b76565b8261060d9190611985565b9150808061061a906119db565b9150506105a0565b5080341015610666576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065d90611aa6565b60405180910390fd5b50505050565b610674610e1d565b8060688190555050565b610686610e1d565b8060678190555050565b6000606a600061069e610e9b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161071e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071590611b12565b60405180910390fd5b6000606a600061072c610e9b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610772610e9b565b73ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156107b7573d6000803e3d6000fd5b5050565b60008060675460696000868152602001908152602001600020600085815260200190815260200160002060010154426107f49190611b32565b6107fe9190611b95565b9050600060696000868152602001908152602001600020600085815260200190815260200160002060000160009054906101000a900461ffff1661ffff169050600060665490506000820361085857809350505050610905565b6000830361089a578161271061086e9190611cf9565b8260685461087c9190611cf9565b6066546108899190611d44565b6108939190611b95565b90506108e7565b816127106108a89190611cf9565b8360026108b59190611d44565b836108c09190611b95565b6068546108cd9190611cf9565b6066546108da9190611d44565b6108e49190611b95565b90505b6066548110156108fe576066549350505050610905565b8093505050505b92915050565b60008060019054906101000a900460ff1615905080801561093c5750600160008054906101000a900460ff1660ff16105b80610969575061094b30610ea3565b1580156109685750600160008054906101000a900460ff1660ff16145b5b6109a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099f90611e10565b60405180910390fd5b60016000806101000a81548160ff021916908360ff16021790555080156109e5576001600060016101000a81548160ff0219169083151502179055505b6109ed610ec6565b846066819055508160658190555083606781905550826068819055508015610a625760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051610a599190611e82565b60405180910390a15b5050505050565b610a71610e1d565b610a7b6000610f1f565b565b60655481565b610a8b61116c565b6069600084815260200190815260200160002060008381526020019081526020016000206040518060800160405290816000820160009054906101000a900461ffff1661ffff1661ffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080610b8385856107bb565b90506000606960008781526020019081526020016000206000868152602001908152602001600020905081341015610bf0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be790611aa6565b60405180910390fd5b60655486108015610c02575060655485105b610c41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3890611ee9565b60405180910390fd5b610c748160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826002015484610fe5565b428160010181905550818160020181905550610c8e610e9b565b8160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018160000160008282829054906101000a900461ffff16610cf29190611f09565b92506101000a81548161ffff021916908361ffff1602179055507fc91751fff8d59126b1df1860c14db94d226cf8e38eda5bb7d5519db911b5bcfd8686610d37610e9b565b8786604051610d4a959493929190611fc9565b60405180910390a181925050509392505050565b60665481565b60685481565b610d72610e1d565b8060668190555050565b60675481565b610d8a610e1d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610df9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df090612095565b60405180910390fd5b610e0281610f1f565b50565b606a6020528060005260406000206000915090505481565b610e25610e9b565b73ffffffffffffffffffffffffffffffffffffffff16610e43610b4c565b73ffffffffffffffffffffffffffffffffffffffff1614610e99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9090612101565b60405180910390fd5b565b600033905090565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16610f15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0c90612193565b60405180910390fd5b610f1d61110b565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8181106110af5781606a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461103b9190611985565b92505081905550818161104e9190611b32565b606a600061105a610b4c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110a39190611985565b92505081905550611106565b80606a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110fe9190611985565b925050819055505b505050565b600060019054906101000a900460ff1661115a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115190612193565b60405180910390fd5b61116a611165610e9b565b610f1f565b565b6040518060800160405280600061ffff1681526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6111d5816111c2565b81146111e057600080fd5b50565b6000813590506111f2816111cc565b92915050565b60006020828403121561120e5761120d6111b8565b5b600061121c848285016111e3565b91505092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6112738261122a565b810181811067ffffffffffffffff821117156112925761129161123b565b5b80604052505050565b60006112a56111ae565b90506112b1828261126a565b919050565b600067ffffffffffffffff8211156112d1576112d061123b565b5b602082029050602081019050919050565b600080fd5b60006112fa6112f5846112b6565b61129b565b9050808382526020820190506020840283018581111561131d5761131c6112e2565b5b835b81811015611346578061133288826111e3565b84526020840193505060208101905061131f565b5050509392505050565b600082601f83011261136557611364611225565b5b81356113758482602086016112e7565b91505092915050565b60008060408385031215611395576113946111b8565b5b600083013567ffffffffffffffff8111156113b3576113b26111bd565b5b6113bf85828601611350565b925050602083013567ffffffffffffffff8111156113e0576113df6111bd565b5b6113ec85828601611350565b9150509250929050565b6113ff816111c2565b82525050565b600060208201905061141a60008301846113f6565b92915050565b60008060408385031215611437576114366111b8565b5b6000611445858286016111e3565b9250506020611456858286016111e3565b9150509250929050565b600061ffff82169050919050565b61147781611460565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114a88261147d565b9050919050565b6114b88161149d565b82525050565b60006080820190506114d3600083018761146e565b6114e060208301866113f6565b6114ed60408301856113f6565b6114fa60608301846114af565b95945050505050565b600067ffffffffffffffff82111561151e5761151d61123b565b5b602082029050602081019050919050565b600080fd5b600067ffffffffffffffff82111561154f5761154e61123b565b5b6115588261122a565b9050602081019050919050565b82818337600083830152505050565b600061158761158284611534565b61129b565b9050828152602081018484840111156115a3576115a261152f565b5b6115ae848285611565565b509392505050565b600082601f8301126115cb576115ca611225565b5b81356115db848260208601611574565b91505092915050565b60006115f76115f284611503565b61129b565b9050808382526020820190506020840283018581111561161a576116196112e2565b5b835b8181101561166157803567ffffffffffffffff81111561163f5761163e611225565b5b80860161164c89826115b6565b8552602085019450505060208101905061161c565b5050509392505050565b600082601f8301126116805761167f611225565b5b81356116908482602086016115e4565b91505092915050565b6000806000606084860312156116b2576116b16111b8565b5b600084013567ffffffffffffffff8111156116d0576116cf6111bd565b5b6116dc86828701611350565b935050602084013567ffffffffffffffff8111156116fd576116fc6111bd565b5b61170986828701611350565b925050604084013567ffffffffffffffff81111561172a576117296111bd565b5b6117368682870161166b565b9150509250925092565b6000806000806080858703121561175a576117596111b8565b5b6000611768878288016111e3565b9450506020611779878288016111e3565b935050604061178a878288016111e3565b925050606061179b878288016111e3565b91505092959194509250565b6117b081611460565b82525050565b6117bf816111c2565b82525050565b6117ce8161149d565b82525050565b6080820160008201516117ea60008501826117a7565b5060208201516117fd60208501826117b6565b50604082015161181060408501826117b6565b50606082015161182360608501826117c5565b50505050565b600060808201905061183e60008301846117d4565b92915050565b600060208201905061185960008301846114af565b92915050565b600080600060608486031215611878576118776111b8565b5b6000611886868287016111e3565b9350506020611897868287016111e3565b925050604084013567ffffffffffffffff8111156118b8576118b76111bd565b5b6118c4868287016115b6565b9150509250925092565b6118d78161149d565b81146118e257600080fd5b50565b6000813590506118f4816118ce565b92915050565b6000602082840312156119105761190f6111b8565b5b600061191e848285016118e5565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611990826111c2565b915061199b836111c2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156119d0576119cf611956565b5b828201905092915050565b60006119e6826111c2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611a1857611a17611956565b5b600182019050919050565b600082825260208201905092915050565b7f44506c616365477269643a20496e76616c69642070757263686173652070726960008201527f63652073656e7400000000000000000000000000000000000000000000000000602082015250565b6000611a90602783611a23565b9150611a9b82611a34565b604082019050919050565b60006020820190508181036000830152611abf81611a83565b9050919050565b7f44506c616365477269643a204e6f2066756e647320746f207769746864726177600082015250565b6000611afc602083611a23565b9150611b0782611ac6565b602082019050919050565b60006020820190508181036000830152611b2b81611aef565b9050919050565b6000611b3d826111c2565b9150611b48836111c2565b925082821015611b5b57611b5a611956565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611ba0826111c2565b9150611bab836111c2565b925082611bbb57611bba611b66565b5b828204905092915050565b60008160011c9050919050565b6000808291508390505b6001851115611c1d57808604811115611bf957611bf8611956565b5b6001851615611c085780820291505b8081029050611c1685611bc6565b9450611bdd565b94509492505050565b600082611c365760019050611cf2565b81611c445760009050611cf2565b8160018114611c5a5760028114611c6457611c93565b6001915050611cf2565b60ff841115611c7657611c75611956565b5b8360020a915084821115611c8d57611c8c611956565b5b50611cf2565b5060208310610133831016604e8410600b8410161715611cc85782820a905083811115611cc357611cc2611956565b5b611cf2565b611cd58484846001611bd3565b92509050818404811115611cec57611ceb611956565b5b81810290505b9392505050565b6000611d04826111c2565b9150611d0f836111c2565b9250611d3c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611c26565b905092915050565b6000611d4f826111c2565b9150611d5a836111c2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611d9357611d92611956565b5b828202905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000611dfa602e83611a23565b9150611e0582611d9e565b604082019050919050565b60006020820190508181036000830152611e2981611ded565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b6000611e6c611e67611e6284611e30565b611e47565b611e3a565b9050919050565b611e7c81611e51565b82525050565b6000602082019050611e976000830184611e73565b92915050565b7f44506c616365477269643a20506978656c206f7574206f6620626f756e647300600082015250565b6000611ed3601f83611a23565b9150611ede82611e9d565b602082019050919050565b60006020820190508181036000830152611f0281611ec6565b9050919050565b6000611f1482611460565b9150611f1f83611460565b92508261ffff03821115611f3657611f35611956565b5b828201905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611f7b578082015181840152602081019050611f60565b83811115611f8a576000848401525b50505050565b6000611f9b82611f41565b611fa58185611f4c565b9350611fb5818560208601611f5d565b611fbe8161122a565b840191505092915050565b600060a082019050611fde60008301886113f6565b611feb60208301876113f6565b611ff860408301866114af565b818103606083015261200a8185611f90565b905061201960808301846113f6565b9695505050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061207f602683611a23565b915061208a82612023565b604082019050919050565b600060208201905081810360008301526120ae81612072565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006120eb602083611a23565b91506120f6826120b5565b602082019050919050565b6000602082019050818103600083015261211a816120de565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b600061217d602b83611a23565b915061218882612121565b604082019050919050565b600060208201905081810360008301526121ac81612170565b905091905056fea26469706673582212200de3ab90fdc8b490fe4e8fbea3853744887c29dd8278ba1a1d1f0d6e3a81928e64736f6c634300080f0033";

type DPlaceGridConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DPlaceGridConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DPlaceGrid__factory extends ContractFactory {
  constructor(...args: DPlaceGridConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<DPlaceGrid> {
    return super.deploy(overrides || {}) as Promise<DPlaceGrid>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DPlaceGrid {
    return super.attach(address) as DPlaceGrid;
  }
  override connect(signer: Signer): DPlaceGrid__factory {
    return super.connect(signer) as DPlaceGrid__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DPlaceGridInterface {
    return new utils.Interface(_abi) as DPlaceGridInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DPlaceGrid {
    return new Contract(address, _abi, signerOrProvider) as DPlaceGrid;
  }
}
